/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE GOPRO_COMMAND PACKING
package com.MAVLink.ardupilotmega;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Send a command to a HeroBus attached GoPro.  Will generate a GOPRO_RESPONSE message with results of the command
*/
public class msg_gopro_command extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_GOPRO_COMMAND = 217;
    public static final int MAVLINK_MSG_LENGTH = 5;
    private static final long serialVersionUID = MAVLINK_MSG_ID_GOPRO_COMMAND;


      
    /**
    * System ID
    */
    public short target_system;
      
    /**
    * Component ID
    */
    public short target_component;
      
    /**
    * First character of the 2 character GoPro command
    */
    public short gp_cmd_name_1;
      
    /**
    * Second character of the 2 character GoPro command
    */
    public short gp_cmd_name_2;
      
    /**
    * Parameter for the command
    */
    public short gp_cmd_parm;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket();
        packet.len = MAVLINK_MSG_LENGTH;
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_GOPRO_COMMAND;
              
        packet.payload.putUnsignedByte(target_system);
              
        packet.payload.putUnsignedByte(target_component);
              
        packet.payload.putUnsignedByte(gp_cmd_name_1);
              
        packet.payload.putUnsignedByte(gp_cmd_name_2);
              
        packet.payload.putUnsignedByte(gp_cmd_parm);
        
        return packet;
    }

    /**
    * Decode a gopro_command message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.target_system = payload.getUnsignedByte();
              
        this.target_component = payload.getUnsignedByte();
              
        this.gp_cmd_name_1 = payload.getUnsignedByte();
              
        this.gp_cmd_name_2 = payload.getUnsignedByte();
              
        this.gp_cmd_parm = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_gopro_command(){
        msgid = MAVLINK_MSG_ID_GOPRO_COMMAND;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_gopro_command(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_GOPRO_COMMAND;
        unpack(mavLinkPacket.payload);        
    }

              
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_GOPRO_COMMAND -"+" target_system:"+target_system+" target_component:"+target_component+" gp_cmd_name_1:"+gp_cmd_name_1+" gp_cmd_name_2:"+gp_cmd_name_2+" gp_cmd_parm:"+gp_cmd_parm+"";
    }
}
        