plugins {
  //id "fi.jasoft.plugin.vaadin" version "1.1.12"
  //id 'com.devsoap.plugin.vaadin' version '1.2.3' // for gradle 4.X
}

description = 'OSH Vaadin WidgetSet'

/** To build w/o vaadin gradle plugin **/
configurations {
  vaadin {
    extendsFrom compile
  }
}

dependencies {
  compile 'com.vaadin:vaadin-shared:' + vaadinVersion
  compile 'com.vaadin:vaadin-server:' + vaadinVersion
  compile 'com.vaadin:vaadin-client-compiled:' + vaadinVersion
  compile 'com.vaadin:vaadin-themes:' + vaadinVersion
  vaadin 'com.vaadin:vaadin-client-compiler:' + vaadinVersion 
}

task cleanWidgetset(type: Delete) {
  delete "$projectDir/src/main/resources/VAADIN/widgetsets"
}

task compileWidgetset(type: JavaExec) {
  main = 'com.vaadin.tools.WidgetsetCompiler'
  classpath sourceSets.main.resources.srcDirs
  classpath configurations.vaadin
  jvmArgs '-Xmx512M', '-Xss512M'
  //args '-Dgwt.persistentunitcachedir', project.buildDir.canonicalPath
  args '-war', "$projectDir/src/main/resources/VAADIN/widgetsets"
  args '-deploy', "$projectDir/build/deploy"
  args '-optimize', '0'
  args '-localWorkers', '' + Runtime.getRuntime().availableProcessors()
  args '-logLevel', 'WARN'
  args 'org.sensorhub.ui.SensorHubWidgetSet'
  /*doFirst {
    println commandLine
  }*/
}

jar.dependsOn compileWidgetset


/*dependencies {
  
}

vaadin {  
  version vaadinVersion
}

webAppDirName = 'src/main/resources'
war {
  extension 'jar'*/
//  rootSpec.exclude('**/*.jar')
/*}

jar.dependsOn war // this is to make sure the jar is built before the distributions are created
jar.enabled false

vaadinJavadocJar.enabled false
vaadinSourcesJar.enabled false*/